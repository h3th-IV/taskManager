func AddTask() {
    newScanner := bufio.NewScanner(os.Stdin)

    var taskID uint
    fmt.Println("Enter task ID (it's the number for the task. Check the last task to assign a number.): ")
    newScanner.Scan()
    _, err := fmt.Scan(newScanner.Text(), &taskID)
    if err != nil {
        log.Printf("Error: %v\n", err)
        return
    }

    var description string
    fmt.Println("Enter task description: ")
    newScanner.Scan()
    _, err = fmt.Scan(newScanner.Text(), &description)
    if err != nil {
        log.Printf("Error: %v\n", err)
        return
    }

    var startTime int64
    fmt.Println("Enter start time in format YY-MM-DD HH:MM:SS: ")
    newScanner.Scan()
    inputTime := newScanner.Text()
    parsedTime, err := time.Parse("06-01-02 15:04:05", inputTime)
    if err != nil {
        log.Printf("Error parsing time: %v\n", err)
        return
    }
    startTime = parsedTime.Unix()

    var completionTime int64
    fmt.Println("Enter time of completion in format YY-MM-DD HH:MM:SS: ")
    newScanner.Scan()
    inputTime = newScanner.Text()
    parsedTime, err = time.Parse("06-01-02 15:04:05", inputTime)
    if err != nil {
        log.Printf("Error parsing time: %v\n", err)
        return
    }
    completionTime = parsedTime.Unix()

    task := NewTask(taskID, description, false, startTime, completionTime)
    fmt.Println("Task added:")
    fmt.Println(task)
    // Consider adding the task to your task list or database here.
}


-- Table for InitTask
CREATE TABLE IF NOT EXISTS init_tasks (
    task_id SERIAL PRIMARY KEY,
    marker BOOLEAN NOT NULL,
    description VARCHAR(255) NOT NULL,
    start_time TIMESTAMP NOT NULL,
    due_date TIMESTAMP NOT NULL
);

-- Table for CompletedTask with a foreign key referencing InitTask
CREATE TABLE IF NOT EXISTS completed_tasks (
    task_id SERIAL PRIMARY KEY,
    init_task_id INT REFERENCES init_tasks(task_id),
    marker VARCHAR(10) NOT NULL,
    description VARCHAR(255) NOT NULL,
    start_time TIMESTAMP NOT NULL,
    due_date TIMESTAMP NOT NULL,
    status VARCHAR(20) NOT NULL,
    completion_time TIMESTAMP NOT NULL
);

task_id
description
status
start_time
due_date
completion_time